var allResult = {"mode": "all", "tests": [{"number": "1a", "name": "Written question: value iteration in basic MDP", "description": "Written question: value iteration in basic MDP", "max_seconds": null, "max_points": 3, "extra_credit": false, "basic": false}, {"number": "1b", "name": "Written question: optimal policy in basic MDP", "description": "Written question: optimal policy in basic MDP", "max_seconds": null, "max_points": 1, "extra_credit": false, "basic": false}, {"number": "2a", "name": "Written question: define new MDP solver for discounts < 1", "description": "Written question: define new MDP solver for discounts < 1", "max_seconds": null, "max_points": 4, "extra_credit": false, "basic": false}, {"number": "3a-basic", "name": "Basic test for succAndProbReward() that covers several edge cases.", "description": "Basic test for succAndProbReward() that covers several edge cases.", "max_seconds": 5, "max_points": 5, "extra_credit": false, "basic": true}, {"number": "3a-advance", "name": "Advanced test cases that covers ValuIteration on BlackjackMDP.", "description": "Advanced test cases that covers ValuIteration on BlackjackMDP.", "max_seconds": 5, "max_points": 5, "extra_credit": false, "basic": true}, {"number": "3a-hidden", "name": "Hidden test for ValueIteration. Run ValueIteration on BlackjackMDP, then test if V[startState] is correct.", "description": "Hidden test for ValueIteration. Run ValueIteration on BlackjackMDP, then test if V[startState] is correct.", "max_seconds": 5, "max_points": 5, "extra_credit": false, "basic": false}, {"number": "4a-basic", "name": "Basic test for incorporateFeedback() using NumberLineMDP.", "description": "Basic test for incorporateFeedback() using NumberLineMDP.", "max_seconds": 10, "max_points": 5, "extra_credit": false, "basic": true}, {"number": "4a-hidden", "name": "Hidden test for incorporateFeedback(). Run QLearningAlgorithm on smallMDP, then ensure that getQ returns reasonable value.", "description": "Hidden test for incorporateFeedback(). Run QLearningAlgorithm on smallMDP, then ensure that getQ returns reasonable value.", "max_seconds": 3, "max_points": 3, "extra_credit": false, "basic": false}, {"number": "4b", "name": "Written question: policy comparison for Q-learning vs. value iteration", "description": "Written question: policy comparison for Q-learning vs. value iteration", "max_seconds": null, "max_points": 4, "extra_credit": false, "basic": false}, {"number": "4b-helper", "name": "Helper function to run Q-learning simulations for question 4b.", "description": "Helper function to run Q-learning simulations for question 4b.", "max_seconds": 60, "max_points": 0, "extra_credit": false, "basic": true}, {"number": "4c-basic", "name": "Basic test for blackjackFeatureExtractor.  Runs QLearningAlgorithm using blackjackFeatureExtractor, then checks to see that Q-values are correct.", "description": "Basic test for blackjackFeatureExtractor.  Runs QLearningAlgorithm using blackjackFeatureExtractor, then checks to see that Q-values are correct.", "max_seconds": 10, "max_points": 5, "extra_credit": false, "basic": true}, {"number": "4d", "name": "Written question: reward comparison for applying policy to baseline and modified MDP", "description": "Written question: reward comparison for applying policy to baseline and modified MDP", "max_seconds": null, "max_points": 4, "extra_credit": false, "basic": false}, {"number": "4d-helper", "name": "Helper function to compare rewards when simulating RL over two different MDPs in question 4d.", "description": "Helper function to compare rewards when simulating RL over two different MDPs in question 4d.", "max_seconds": 60, "max_points": 0, "extra_credit": false, "basic": true}], "leaderboard": []};
